// Generated by the Table Description Language compiler.  DO NOT EDIT!
// source: Title.prot

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;


public class Title : Table.Binary, Table.IKey
{
	UInt32       m_id;
	Table.String m_prefab;
	
	public const UInt32 Version = 493378320;
	
	public UInt64 Key()
	{
		return m_id;
	}
	
	public UInt32 id
	{
		get { return m_id; }
	}
	
	public string prefab
	{
		get { return m_prefab; }
	}
	
	public override int Load(byte[] buffer, int index)
	{
		Table.Loader loader = new Table.Loader(ref buffer, index);
		loader.Load(ref m_id).Load(ref m_prefab);
		return loader.Size;
	}
}

// source: C 称号配置表.xls, sheet: Sheet1
public sealed class TitleManager : Table.Manager<Title>
{
	private static readonly TitleManager ms_instance = new TitleManager();
	
	private TitleManager()
	{
	}
	
	public static TitleManager instance
	{
		get { return ms_instance; }
	}
	
	public string source
	{
		get { return "title.tbl"; }
	}
	
	public bool Load(string path)
	{
		Register();
		return Load(path, source, Title.Version);
	}
	
	public Title Find(UInt32 key)
	{
		return FindInternal(key);
	}
	
	#region new helper
	public static object NewTitle()
	{
		return new Title();
	}
	
	private static void Register()
	{
		Table.NewHelper.Clear();
		Table.NewHelper.Register(typeof(Title), NewTitle);
	}
	#endregion
}

