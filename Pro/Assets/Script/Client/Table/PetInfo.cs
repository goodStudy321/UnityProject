// Generated by the Table Description Language compiler.  DO NOT EDIT!
// source: PetInfo.prot

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;


public class PetInfo : Table.Binary, Table.IKey
{
	UInt32       m_id;
	Table.String m_name;
	UInt16       m_model_id;
	UInt16       m_ui_model_id;
	Table.String m_icon;
	Byte         m_mount_point;
	
	public const UInt32 Version = 57638037;
	
	public UInt64 Key()
	{
		return m_id;
	}
	
	public UInt32 id
	{
		get { return m_id; }
	}
	
	public string name
	{
		get { return m_name; }
	}
	
	public UInt16 modelId
	{
		get { return m_model_id; }
	}
	
	public UInt16 uiModelId
	{
		get { return m_ui_model_id; }
	}
	
	public string icon
	{
		get { return m_icon; }
	}
	
	public Byte mountPoint
	{
		get { return m_mount_point; }
	}
	
	public override int Load(byte[] buffer, int index)
	{
		Table.Loader loader = new Table.Loader(ref buffer, index);
		loader.Load(ref m_id).Load(ref m_name).Load(ref m_model_id).Load(ref m_ui_model_id).Load(ref m_icon).Load(ref m_mount_point);
		return loader.Size;
	}
}

// source: C 宠物基础表.xls, sheet: Sheet1
public sealed class PetInfoManager : Table.Manager<PetInfo>
{
	private static readonly PetInfoManager ms_instance = new PetInfoManager();
	
	private PetInfoManager()
	{
	}
	
	public static PetInfoManager instance
	{
		get { return ms_instance; }
	}
	
	public string source
	{
		get { return "petinfo.tbl"; }
	}
	
	public bool Load(string path)
	{
		Register();
		return Load(path, source, PetInfo.Version);
	}
	
	public PetInfo Find(UInt32 key)
	{
		return FindInternal(key);
	}
	
	#region new helper
	public static object NewPetInfo()
	{
		return new PetInfo();
	}
	
	private static void Register()
	{
		Table.NewHelper.Clear();
		Table.NewHelper.Register(typeof(PetInfo), NewPetInfo);
	}
	#endregion
}

