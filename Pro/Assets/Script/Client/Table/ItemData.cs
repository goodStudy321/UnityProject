// Generated by the Table Description Language compiler.  DO NOT EDIT!
// source: ItemData.prot

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;


public class ItemData : Table.Binary, Table.IKey
{
	UInt32       m_id;
	Table.String m_name;
	Table.String m_icon;
	Table.String m_model;
	Byte         m_type;
	Byte         m_quality;
	Byte         m_canBind;
	Byte         m_useEffect1;
	Table.String m_useEffectArg1;
	
	public const UInt32 Version = 74161443;
	
	public UInt64 Key()
	{
		return m_id;
	}
	
	public UInt32 id
	{
		get { return m_id; }
	}
	
	public string name
	{
		get { return m_name; }
	}
	
	public string icon
	{
		get { return m_icon; }
	}
	
	public string model
	{
		get { return m_model; }
	}
	
	public Byte type
	{
		get { return m_type; }
	}
	
	public Byte quality
	{
		get { return m_quality; }
	}
	
	public Byte canBind
	{
		get { return m_canBind; }
	}
	
	public Byte useEffect1
	{
		get { return m_useEffect1; }
	}
	
	public string useEffectArg1
	{
		get { return m_useEffectArg1; }
	}
	
	public override int Load(byte[] buffer, int index)
	{
		Table.Loader loader = new Table.Loader(ref buffer, index);
		loader.Load(ref m_id).Load(ref m_name).Load(ref m_icon).Load(ref m_model).Load(ref m_type).Load(ref m_quality).Load(ref m_canBind).Load(ref m_useEffect1).Load(ref m_useEffectArg1);
		return loader.Size;
	}
}

// source: D 道具配置.xls, sheet: Sheet1
public sealed class ItemDataManager : Table.Manager<ItemData>
{
	private static readonly ItemDataManager ms_instance = new ItemDataManager();
	
	private ItemDataManager()
	{
	}
	
	public static ItemDataManager instance
	{
		get { return ms_instance; }
	}
	
	public string source
	{
		get { return "itemdata.tbl"; }
	}
	
	public bool Load(string path)
	{
		Register();
		return Load(path, source, ItemData.Version);
	}
	
	public ItemData Find(UInt32 key)
	{
		return FindInternal(key);
	}
	
	#region new helper
	public static object NewItemData()
	{
		return new ItemData();
	}
	
	private static void Register()
	{
		Table.NewHelper.Clear();
		Table.NewHelper.Register(typeof(ItemData), NewItemData);
	}
	#endregion
}

