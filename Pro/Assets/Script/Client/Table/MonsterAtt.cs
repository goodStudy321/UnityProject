// Generated by the Table Description Language compiler.  DO NOT EDIT!
// source: monster_att.prot

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;


public class MonsterAtt : Table.Binary, Table.IKey
{
	#region skillid
	public class skillid : Table.Binary
	{
		List<UInt32> m_list;
		
		public List<UInt32> list
		{
			get { return m_list; }
		}
		
		public override int Load(byte[] buffer, int index)
		{
			Table.Loader loader = new Table.Loader(ref buffer, index);
			loader.Load(ref m_list);
			return loader.Size;
		}
	}
	#endregion
	
	#region dropList
	public class dropList : Table.Binary
	{
		UInt32 m_dropid;
		UInt32 m_dropNum;
		
		public UInt32 dropid
		{
			get { return m_dropid; }
		}
		
		public UInt32 dropNum
		{
			get { return m_dropNum; }
		}
		
		public override int Load(byte[] buffer, int index)
		{
			Table.Loader loader = new Table.Loader(ref buffer, index);
			loader.Load(ref m_dropid).Load(ref m_dropNum);
			return loader.Size;
		}
	}
	#endregion
	
	#region firstDrop
	public class firstDrop : Table.Binary
	{
		List<dropList> m_list;
		
		public List<dropList> list
		{
			get { return m_list; }
		}
		
		public override int Load(byte[] buffer, int index)
		{
			Table.Loader loader = new Table.Loader(ref buffer, index);
			loader.Load(ref m_list);
			return loader.Size;
		}
	}
	#endregion
	
	UInt32       m_id;
	Table.String m_name;
	Byte         m_fight_type;
	UInt16       m_level;
	UInt16       m_model_id;
	skillid      m_skill_id;
	UInt32       m_view_distance;
	Byte         m_monter_type;
	UInt16       m_hpSeg;
	firstDrop    m_first_Drops;
	Byte         m_pickRange;
	Byte         m_canQuickPick;
	UInt16       m_angryTime;
	
	public const UInt32 Version = 3927182119;
	
	public UInt64 Key()
	{
		return m_id;
	}
	
	public UInt32 id
	{
		get { return m_id; }
	}
	
	public string name
	{
		get { return m_name; }
	}
	
	public Byte fightType
	{
		get { return m_fight_type; }
	}
	
	public UInt16 level
	{
		get { return m_level; }
	}
	
	public UInt16 modelId
	{
		get { return m_model_id; }
	}
	
	public skillid skillId
	{
		get { return m_skill_id; }
	}
	
	public UInt32 viewDistance
	{
		get { return m_view_distance; }
	}
	
	public Byte monterType
	{
		get { return m_monter_type; }
	}
	
	public UInt16 hpSeg
	{
		get { return m_hpSeg; }
	}
	
	public firstDrop firstDrops
	{
		get { return m_first_Drops; }
	}
	
	public Byte pickRange
	{
		get { return m_pickRange; }
	}
	
	public Byte canQuickPick
	{
		get { return m_canQuickPick; }
	}
	
	public UInt16 angryTime
	{
		get { return m_angryTime; }
	}
	
	public override int Load(byte[] buffer, int index)
	{
		Table.Loader loader = new Table.Loader(ref buffer, index);
		loader.Load(ref m_id).Load(ref m_name).Load(ref m_fight_type).Load(ref m_level).Load(ref m_model_id).Load(ref m_skill_id).Load(ref m_view_distance).Load(ref m_monter_type).Load(ref m_hpSeg).Load(ref m_first_Drops).Load(ref m_pickRange).Load(ref m_canQuickPick).Load(ref m_angryTime);
		return loader.Size;
	}
}

// source: G 怪物配置.xls, sheet: Sheet1
public sealed class MonsterAttManager : Table.Manager<MonsterAtt>
{
	private static readonly MonsterAttManager ms_instance = new MonsterAttManager();
	
	private MonsterAttManager()
	{
	}
	
	public static MonsterAttManager instance
	{
		get { return ms_instance; }
	}
	
	public string source
	{
		get { return "monster_att.tbl"; }
	}
	
	public bool Load(string path)
	{
		Register();
		return Load(path, source, MonsterAtt.Version);
	}
	
	public MonsterAtt Find(UInt32 key)
	{
		return FindInternal(key);
	}
	
	#region new helper
	public static object NewMonsterAtt()
	{
		return new MonsterAtt();
	}
	public static object NewMonsterAttskillid()
	{
		return new MonsterAtt.skillid();
	}
	
	public static object NewMonsterAttdropList()
	{
		return new MonsterAtt.dropList();
	}
	
	public static object NewMonsterAttfirstDrop()
	{
		return new MonsterAtt.firstDrop();
	}
	
	private static void Register()
	{
		Table.NewHelper.Clear();
		Table.NewHelper.Register(typeof(MonsterAtt), NewMonsterAtt);
		Table.NewHelper.Register(typeof(MonsterAtt.skillid), NewMonsterAttskillid);
		Table.NewHelper.Register(typeof(MonsterAtt.dropList), NewMonsterAttdropList);
		Table.NewHelper.Register(typeof(MonsterAtt.firstDrop), NewMonsterAttfirstDrop);
	}
	#endregion
}

