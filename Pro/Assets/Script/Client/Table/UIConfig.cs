// Generated by the Table Description Language compiler.  DO NOT EDIT!
// source: UIConfig.prot

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;


public class UIConfig : Table.Binary, Table.IKey
{
	UInt16       m_id;
	Table.String m_typeName;
	UInt16       m_sort;
	Byte         m_bgEffect;
	Byte         m_onOffEffect;
	Byte         m_onOffType;
	Table.String m_openAudio;
	Table.String m_closeAudio;
	
	public const UInt32 Version = 391773491;
	
	public UInt64 Key()
	{
		return m_id;
	}
	
	public UInt16 id
	{
		get { return m_id; }
	}
	
	public string typeName
	{
		get { return m_typeName; }
	}
	
	public UInt16 sort
	{
		get { return m_sort; }
	}
	
	public Byte bgEffect
	{
		get { return m_bgEffect; }
	}
	
	public Byte onOffEffect
	{
		get { return m_onOffEffect; }
	}
	
	public Byte onOffType
	{
		get { return m_onOffType; }
	}
	
	public string openAudio
	{
		get { return m_openAudio; }
	}
	
	public string closeAudio
	{
		get { return m_closeAudio; }
	}
	
	public override int Load(byte[] buffer, int index)
	{
		Table.Loader loader = new Table.Loader(ref buffer, index);
		loader.Load(ref m_id).Load(ref m_typeName).Load(ref m_sort).Load(ref m_bgEffect).Load(ref m_onOffEffect).Load(ref m_onOffType).Load(ref m_openAudio).Load(ref m_closeAudio);
		return loader.Size;
	}
}

// source: U UI配置表.xls, sheet: Sheet1
public sealed class UIConfigManager : Table.Manager<UIConfig>
{
	private static readonly UIConfigManager ms_instance = new UIConfigManager();
	
	private UIConfigManager()
	{
	}
	
	public static UIConfigManager instance
	{
		get { return ms_instance; }
	}
	
	public string source
	{
		get { return "uiconfig.tbl"; }
	}
	
	public bool Load(string path)
	{
		Register();
		return Load(path, source, UIConfig.Version);
	}
	
	public UIConfig Find(UInt16 key)
	{
		return FindInternal(key);
	}
	
	#region new helper
	public static object NewUIConfig()
	{
		return new UIConfig();
	}
	
	private static void Register()
	{
		Table.NewHelper.Clear();
		Table.NewHelper.Register(typeof(UIConfig), NewUIConfig);
	}
	#endregion
}

