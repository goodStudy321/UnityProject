// Generated by the Table Description Language compiler.  DO NOT EDIT!
// source: PetLevel.prot

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;


public class PetLevel : Table.Binary, Table.IKey
{
	UInt16 m_level;
	UInt32 m_cost_exp;
	UInt32 m_att;
	UInt32 m_arm;
	UInt32 m_hp;
	UInt32 m_def;
	
	public const UInt32 Version = 1785850037;
	
	public UInt64 Key()
	{
		return m_level;
	}
	
	public UInt16 level
	{
		get { return m_level; }
	}
	
	public UInt32 costExp
	{
		get { return m_cost_exp; }
	}
	
	public UInt32 att
	{
		get { return m_att; }
	}
	
	public UInt32 arm
	{
		get { return m_arm; }
	}
	
	public UInt32 hp
	{
		get { return m_hp; }
	}
	
	public UInt32 def
	{
		get { return m_def; }
	}
	
	public override int Load(byte[] buffer, int index)
	{
		Table.Loader loader = new Table.Loader(ref buffer, index);
		loader.Load(ref m_level).Load(ref m_cost_exp).Load(ref m_att).Load(ref m_arm).Load(ref m_hp).Load(ref m_def);
		return loader.Size;
	}
}

// source: C 宠物等级配置表.xls, sheet: Sheet1
public sealed class PetLevelManager : Table.Manager<PetLevel>
{
	private static readonly PetLevelManager ms_instance = new PetLevelManager();
	
	private PetLevelManager()
	{
	}
	
	public static PetLevelManager instance
	{
		get { return ms_instance; }
	}
	
	public string source
	{
		get { return "petlevel.tbl"; }
	}
	
	public bool Load(string path)
	{
		Register();
		return Load(path, source, PetLevel.Version);
	}
	
	public PetLevel Find(UInt16 key)
	{
		return FindInternal(key);
	}
	
	#region new helper
	public static object NewPetLevel()
	{
		return new PetLevel();
	}
	
	private static void Register()
	{
		Table.NewHelper.Clear();
		Table.NewHelper.Register(typeof(PetLevel), NewPetLevel);
	}
	#endregion
}

