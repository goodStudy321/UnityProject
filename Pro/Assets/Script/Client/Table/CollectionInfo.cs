// Generated by the Table Description Language compiler.  DO NOT EDIT!
// source: CollectionInfo.prot

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;


public class CollectionInfo : Table.Binary, Table.IKey
{
	#region CreateCond
	public class CreateCond : Table.Binary
	{
		Byte  m_type;
		Int32 m_arg;
		
		public Byte type
		{
			get { return m_type; }
		}
		
		public Int32 arg
		{
			get { return m_arg; }
		}
		
		public override int Load(byte[] buffer, int index)
		{
			Table.Loader loader = new Table.Loader(ref buffer, index);
			loader.Load(ref m_type).Load(ref m_arg);
			return loader.Size;
		}
	}
	#endregion
	
	UInt32       m_id;
	Table.String m_name;
	Table.String m_model;
	Table.String m_bornAni;
	Table.String m_idleAni;
	Table.String m_runAni;
	Table.String m_dieAni;
	Byte         m_TriTy;
	Table.String m_TriAni;
	Table.String m_FloAni;
	UInt16       m_modelsize;
	UInt16       m_distance;
	Table.String m_icon;
	Table.String m_text;
	Byte         m_removeOnSuccess;
	CreateCond   m_cond;
	Int16        m_ht;
	
	public const UInt32 Version = 1941969618;
	
	public UInt64 Key()
	{
		return m_id;
	}
	
	public UInt32 id
	{
		get { return m_id; }
	}
	
	public string name
	{
		get { return m_name; }
	}
	
	public string model
	{
		get { return m_model; }
	}
	
	public string bornAni
	{
		get { return m_bornAni; }
	}
	
	public string idleAni
	{
		get { return m_idleAni; }
	}
	
	public string runAni
	{
		get { return m_runAni; }
	}
	
	public string dieAni
	{
		get { return m_dieAni; }
	}
	
	public Byte triTy
	{
		get { return m_TriTy; }
	}
	
	public string triAni
	{
		get { return m_TriAni; }
	}
	
	public string floAni
	{
		get { return m_FloAni; }
	}
	
	public UInt16 modelsize
	{
		get { return m_modelsize; }
	}
	
	public UInt16 distance
	{
		get { return m_distance; }
	}
	
	public string icon
	{
		get { return m_icon; }
	}
	
	public string text
	{
		get { return m_text; }
	}
	
	public Byte removeOnSuccess
	{
		get { return m_removeOnSuccess; }
	}
	
	public CreateCond cond
	{
		get { return m_cond; }
	}
	
	public Int16 ht
	{
		get { return m_ht; }
	}
	
	public override int Load(byte[] buffer, int index)
	{
		Table.Loader loader = new Table.Loader(ref buffer, index);
		loader.Load(ref m_id).Load(ref m_name).Load(ref m_model).Load(ref m_bornAni).Load(ref m_idleAni).Load(ref m_runAni).Load(ref m_dieAni).Load(ref m_TriTy).Load(ref m_TriAni).Load(ref m_FloAni).Load(ref m_modelsize).Load(ref m_distance).Load(ref m_icon).Load(ref m_text).Load(ref m_removeOnSuccess).Load(ref m_cond).Load(ref m_ht);
		return loader.Size;
	}
}

// source: C 采集物配置.xls, sheet: Sheet1
public sealed class CollectionInfoManager : Table.Manager<CollectionInfo>
{
	private static readonly CollectionInfoManager ms_instance = new CollectionInfoManager();
	
	private CollectionInfoManager()
	{
	}
	
	public static CollectionInfoManager instance
	{
		get { return ms_instance; }
	}
	
	public string source
	{
		get { return "collectioninfo.tbl"; }
	}
	
	public bool Load(string path)
	{
		Register();
		return Load(path, source, CollectionInfo.Version);
	}
	
	public CollectionInfo Find(UInt32 key)
	{
		return FindInternal(key);
	}
	
	#region new helper
	public static object NewCollectionInfo()
	{
		return new CollectionInfo();
	}
	public static object NewCollectionInfoCreateCond()
	{
		return new CollectionInfo.CreateCond();
	}
	
	private static void Register()
	{
		Table.NewHelper.Clear();
		Table.NewHelper.Register(typeof(CollectionInfo), NewCollectionInfo);
		Table.NewHelper.Register(typeof(CollectionInfo.CreateCond), NewCollectionInfoCreateCond);
	}
	#endregion
}

