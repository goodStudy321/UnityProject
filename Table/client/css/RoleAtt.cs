// Generated by the Table Description Language compiler.  DO NOT EDIT!
// source: role_att.prot

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;


public class RoleAtt : Table.Binary, Table.IKey
{
	#region AttRestaint
	public class AttRestaint : Table.Binary
	{
		List<UInt16> m_list;
		
		public List<UInt16> list
		{
			get { return m_list; }
		}
		
		public override int Load(byte[] buffer, int index)
		{
			Table.Loader loader = new Table.Loader(ref buffer, index);
			loader.Load(ref m_list);
			return loader.Size;
		}
	}
	#endregion
	
	#region skillid
	public class skillid : Table.Binary
	{
		List<UInt32> m_list;
		
		public List<UInt32> list
		{
			get { return m_list; }
		}
		
		public override int Load(byte[] buffer, int index)
		{
			Table.Loader loader = new Table.Loader(ref buffer, index);
			loader.Load(ref m_list);
			return loader.Size;
		}
	}
	#endregion
	
	UInt32  m_id;
	Byte    m_sex;
	UInt16  m_level;
	Int64   m_exp;
	UInt16  m_model_id;
	UInt16  m_weapon_mod_id;
	UInt16  m_profession;
	Byte    m_speed;
	Int32   m_hp;
	UInt32  m_att;
	UInt32  m_def;
	UInt32  m_hit;
	UInt32  m_dodge;
	UInt32  m_crit;
	UInt32  m_toughness;
	UInt32  m_pojia;
	UInt32  m_shanghaijiacheng;
	UInt32  m_baojishanghai;
	UInt32  m_shanghaijianmian;
	skillid m_skill_id;
	UInt32  m_view_distance;
	
	public const UInt32 Version = 4235927856;
	
	public UInt64 Key()
	{
		return m_id;
	}
	
	public UInt32 id
	{
		get { return m_id; }
	}
	
	public Byte sex
	{
		get { return m_sex; }
	}
	
	public UInt16 level
	{
		get { return m_level; }
	}
	
	public Int64 exp
	{
		get { return m_exp; }
	}
	
	public UInt16 modelId
	{
		get { return m_model_id; }
	}
	
	public UInt16 weaponModId
	{
		get { return m_weapon_mod_id; }
	}
	
	public UInt16 profession
	{
		get { return m_profession; }
	}
	
	public Byte speed
	{
		get { return m_speed; }
	}
	
	public Int32 hp
	{
		get { return m_hp; }
	}
	
	public UInt32 att
	{
		get { return m_att; }
	}
	
	public UInt32 def
	{
		get { return m_def; }
	}
	
	public UInt32 hit
	{
		get { return m_hit; }
	}
	
	public UInt32 dodge
	{
		get { return m_dodge; }
	}
	
	public UInt32 crit
	{
		get { return m_crit; }
	}
	
	public UInt32 toughness
	{
		get { return m_toughness; }
	}
	
	public UInt32 pojia
	{
		get { return m_pojia; }
	}
	
	public UInt32 shanghaijiacheng
	{
		get { return m_shanghaijiacheng; }
	}
	
	public UInt32 baojishanghai
	{
		get { return m_baojishanghai; }
	}
	
	public UInt32 shanghaijianmian
	{
		get { return m_shanghaijianmian; }
	}
	
	public skillid skillId
	{
		get { return m_skill_id; }
	}
	
	public UInt32 viewDistance
	{
		get { return m_view_distance; }
	}
	
	public override int Load(byte[] buffer, int index)
	{
		Table.Loader loader = new Table.Loader(ref buffer, index);
		loader.Load(ref m_id).Load(ref m_sex).Load(ref m_level).Load(ref m_exp).Load(ref m_model_id).Load(ref m_weapon_mod_id).Load(ref m_profession).Load(ref m_speed).Load(ref m_hp).Load(ref m_att).Load(ref m_def).Load(ref m_hit).Load(ref m_dodge).Load(ref m_crit).Load(ref m_toughness).Load(ref m_pojia).Load(ref m_shanghaijiacheng).Load(ref m_baojishanghai).Load(ref m_shanghaijianmian).Load(ref m_skill_id).Load(ref m_view_distance);
		return loader.Size;
	}
}

// source: J 角色属性表.xls, sheet: Sheet1
public sealed class RoleAttManager : Table.Manager<RoleAtt>
{
	private static readonly RoleAttManager ms_instance = new RoleAttManager();
	
	private RoleAttManager()
	{
	}
	
	public static RoleAttManager instance
	{
		get { return ms_instance; }
	}
	
	public string source
	{
		get { return "role_att.tbl"; }
	}
	
	public bool Load(string path)
	{
		Register();
		return Load(path, source, RoleAtt.Version);
	}
	
	public RoleAtt Find(UInt32 key)
	{
		return FindInternal(key);
	}
	
	#region new helper
	public static object NewRoleAtt()
	{
		return new RoleAtt();
	}
	public static object NewRoleAttAttRestaint()
	{
		return new RoleAtt.AttRestaint();
	}
	
	public static object NewRoleAttskillid()
	{
		return new RoleAtt.skillid();
	}
	
	private static void Register()
	{
		Table.NewHelper.Clear();
		Table.NewHelper.Register(typeof(RoleAtt), NewRoleAtt);
		Table.NewHelper.Register(typeof(RoleAtt.AttRestaint), NewRoleAttAttRestaint);
		Table.NewHelper.Register(typeof(RoleAtt.skillid), NewRoleAttskillid);
	}
	#endregion
}

