// Generated by the Table Description Language compiler.  DO NOT EDIT!
// source: role_base.prot

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;


public class RoleBase : Table.Binary, Table.IKey
{
	UInt16       m_hero_no;
	UInt16       m_baseid;
	Table.String m_role_name;
	Table.String m_model_path;
	Byte         m_character_type;
	Table.String m_ui_model;
	
	public const UInt32 Version = 4135149894;
	
	public UInt64 Key()
	{
		return m_baseid;
	}
	
	public UInt16 heroNo
	{
		get { return m_hero_no; }
	}
	
	public UInt16 baseid
	{
		get { return m_baseid; }
	}
	
	public string roleName
	{
		get { return m_role_name; }
	}
	
	public string modelPath
	{
		get { return m_model_path; }
	}
	
	public Byte characterType
	{
		get { return m_character_type; }
	}
	
	public string uiModel
	{
		get { return m_ui_model; }
	}
	
	public override int Load(byte[] buffer, int index)
	{
		Table.Loader loader = new Table.Loader(ref buffer, index);
		loader.Load(ref m_hero_no).Load(ref m_baseid).Load(ref m_role_name).Load(ref m_model_path).Load(ref m_character_type).Load(ref m_ui_model);
		return loader.Size;
	}
}

// source: J 角色模型表.xls, sheet: Sheet1
public sealed class RoleBaseManager : Table.Manager<RoleBase>
{
	private static readonly RoleBaseManager ms_instance = new RoleBaseManager();
	
	private RoleBaseManager()
	{
	}
	
	public static RoleBaseManager instance
	{
		get { return ms_instance; }
	}
	
	public string source
	{
		get { return "role_base.tbl"; }
	}
	
	public bool Load(string path)
	{
		Register();
		return Load(path, source, RoleBase.Version);
	}
	
	public RoleBase Find(UInt16 key)
	{
		return FindInternal(key);
	}
	
	#region new helper
	public static object NewRoleBase()
	{
		return new RoleBase();
	}
	
	private static void Register()
	{
		Table.NewHelper.Clear();
		Table.NewHelper.Register(typeof(RoleBase), NewRoleBase);
	}
	#endregion
}

